unit UfrCadFornecedor;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.DBCtrls, Vcl.Mask,
  Vcl.ExtCtrls, REST.Types, REST.Client, Data.Bind.Components,
  Data.Bind.ObjectScope, Data.Win.ADODB, Data.DB, Vcl.Buttons,  System.JSON;

type
  TFrmFornecedor = class(TForm)
    Panel1: TPanel;
    Panel2: TPanel;
    EdtNomeFantasia: TEdit;
    EdtRazaoSocial: TEdit;
    MEdtCnpj: TMaskEdit;
    EdtSegmento: TEdit;
    EdtRua: TEdit;
    EdtComplemento: TEdit;
    EdtNumero: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label9: TLabel;
    Label10: TLabel;
    Label13: TLabel;
    Label11: TLabel;
    Label12: TLabel;
    Label3: TLabel;
    EdtEmail: TEdit;
    EdtUf: TEdit;
    EdtCidade: TEdit;
    RESTClient1: TRESTClient;
    RESTRequest1: TRESTRequest;
    RESTResponse1: TRESTResponse;
    Button1: TButton;
    RESTClient2: TRESTClient;
    RESTRequest2: TRESTRequest;
    RESTResponse2: TRESTResponse;
    MedtCep: TMaskEdit;
    CmdCadFornecedor: TADOCommand;
    Panel3: TPanel;
    SBtnSalvar: TSpeedButton;
    SpeedButton2: TSpeedButton;
    SpeedButton3: TSpeedButton;
    SpeedButton4: TSpeedButton;
    SBtnCancelar: TSpeedButton;
    RESTClientCNPJ: TRESTClient;
    RESTRequestCNPJ: TRESTRequest;
    EdtBairro: TEdit;
    Label14: TLabel;
    Editefone1: TEdit;
    Editefone2: TEdit;
    Label15: TLabel;
    QryFornecedor: TADOQuery;
    QryFornecedorNOMEFANTASIA: TStringField;
    QryFornecedorRAZAOSOCIAL: TStringField;
    QryFornecedorRUA: TStringField;
    QryFornecedorNUMERO: TIntegerField;
    QryFornecedorUF: TStringField;
    QryFornecedorCOMPLEMENTO: TStringField;
    QryFornecedorCIDADE: TStringField;
    QryFornecedorCEP: TIntegerField;
    QryFornecedorEMAIL: TStringField;
    QryFornecedorFIXO: TStringField;
    QryFornecedorMOVEL: TStringField;
    QryFornecedorSegmento: TStringField;
    QryFornecedorCNPJ: TBCDField;
    procedure BtnBuscarClick(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure SBtnSalvarClick(Sender: TObject);
    procedure SBtnCancelarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FrmFornecedor: TFrmFornecedor;

implementation

{$R *.dfm}

uses Pkg.Json.DTO, Ucep, GetCnpj, Udados;

procedure TFrmFornecedor.BtnBuscarClick(Sender: TObject);
var
  cep: TCep;
begin
  RESTClient1.BaseURL := 'http://viacep.com.br/ws/' + MedtCep.Text + '/json';
  RESTRequest1.Execute;

  cep := TCep.fromjsonString(RESTResponse1.Content.Trim);
  try
    EdtRua.Text := cep.Logradouro;
    EdtUf.Text := cep.Uf;
    EdtCidade.Text := cep.Localidade;
  finally
    cep.Free;
  end;

end;

procedure TFrmFornecedor.Button1Click(Sender: TObject);
var
  cnpj: TRootDTO;
  JSonValue : TJSonValue;
  st, Branch : string;
begin
  RESTClientCNPJ.BaseURL := 'https://www.receitaws.com.br/v1/cnpj/' + MEdtCnpj.Text;
  RESTRequestCNPJ.Execute;
  st := (RESTRequestCNPJ.Response.JSONText);

  JsonValue := TJSonObject.ParseJSONValue(st);
  if JsonValue.GetValue<string>('fantasia') = '' then
    EdtNomeFantasia.Text := JsonValue.GetValue<string>('nome')
  else
    EdtNomeFantasia.Text := JsonValue.GetValue<string>('fantasia');
  EdtRazaoSocial.Text := JsonValue.GetValue<string>('nome');
 // EdtSegmento.Text := JsonValue.GetValue<string>('atividade_principal');
  EdtComplemento.Text := JsonValue.GetValue<string>('complemento');
  EdtRua.Text := JsonValue.GetValue<string>('logradouro');
  EdtNumero.Text := JsonValue.GetValue<string>('numero');
  EdtUf.Text := JsonValue.GetValue<string>('uf');
  EdtBairro.Text  :=  JsonValue.GetValue<string>('bairro');
  MedtCep.Text := '('+Copy((JsonValue.GetValue<string>('cep')),1,2)+')'+ Copy((JsonValue.GetValue<string>('cep')),4,3) +'-'+Copy((JsonValue.GetValue<string>('cep')),8,3);
  EdtCidade.Text := JsonValue.GetValue<string>('municipio');
  EdtEmail.Text := JsonValue.GetValue<string>('email');
  Editefone1.Text := '('+Copy((JsonValue.GetValue<string>('telefone')),2,2)+')'+Copy((JsonValue.GetValue<string>('telefone')),6,4)+'-'+Copy((JsonValue.GetValue<string>('telefone')),11,4);
  JsonValue.Free;
end;

procedure TFrmFornecedor.SBtnCancelarClick(Sender: TObject);
begin
  if MessageDlg('Deseja cancelar procedimento?', mtConfirmation, [mbYes, mbNo],0) = mrYes then
    Close;
end;

procedure TFrmFornecedor.SBtnSalvarClick(Sender: TObject);
var
  Movel, Fixo: string;
begin
  QryFornecedor.Close;
  QryFornecedor.open;
  QryFornecedor.First;
  while not QryFornecedor.Eof do
  begin
    if MEdtCnpj.Text = QryFornecedorCNPJ.AsString then
      raise Exception.Create('Fornecedor já cadastrado');
    QryFornecedor.Next;
  end;


  if (Editefone1.Text = '') AND (Editefone2.Text  = '') then
    raise Exception.Create('Informe Pelo menos Um Número de contato!!!');
  if MEdtCnpj.Text = '' then
    raise Exception.Create('Campo do CNPJ Obrigatótio!!!')
  else
    CmdCadFornecedor.Parameters.ParamByName('CNPJ').Value := MEdtCnpj.Text;

  if EdtNomeFantasia.Text = '' then
    raise Exception.Create('Campo do Nome Fantasia Obrigatótio!!!')
  else
    CmdCadFornecedor.Parameters.ParamByName('NomeFantasia').Value :=
      EdtNomeFantasia.Text;

  if EdtRazaoSocial.Text = '' then
    raise Exception.Create('Campo do Nome Razão Social Obrigatótio!!!')
  else
    CmdCadFornecedor.Parameters.ParamByName('RazaoSocial').Value :=
      EdtRazaoSocial.Text;

  if EdtSegmento.Text = '' then
    raise Exception.Create('Campo do Segmento Obrigatótio!!!')
  else
    CmdCadFornecedor.Parameters.ParamByName('Segmento').Value :=
      EdtSegmento.Text;

  if EdtRua.Text = '' then
    raise Exception.Create('Campo do RUA Obrigatótio!!!')
  else
    CmdCadFornecedor.Parameters.ParamByName('RUA').Value := EdtRua.Text;

  if EdtNumero.Text = '' then
    raise Exception.Create('Campo do Número do local Obrigatótio!!!')
  else
    CmdCadFornecedor.Parameters.ParamByName('NUMERO').Value :=
      StrToInt(EdtNumero.Text);

  if EdtUf.Text = '' then
    raise Exception.Create('Campo do UF Obrigatótio!!!')
  else
    CmdCadFornecedor.Parameters.ParamByName('UF').Value := EdtUf.Text;

  CmdCadFornecedor.Parameters.ParamByName('COMPLEMENTO').Value :=
    EdtComplemento.Text;

  if EdtCidade.Text = '' then
    raise Exception.Create('Campo da Cidade Obrigatótio!!!')
  else
    CmdCadFornecedor.Parameters.ParamByName('CIDADE').Value := EdtCidade.Text;

  if MedtCep.Text = '' then
    raise Exception.Create('Campo do Número do CEP Obrigatótio!!!')
  else
    CmdCadFornecedor.Parameters.ParamByName('CEP').Value :=
      StrToInt(MedtCep.Text);

  if EdtEmail.Text = '' then
    raise Exception.Create('Campo do Email Obrigatótio!!!')
  else
    CmdCadFornecedor.Parameters.ParamByName('EMAIL').Value := EdtEmail.Text;

  if Fixo <> '' then
    CmdCadFornecedor.Parameters.ParamByName('FIXO').Value := Fixo;

  if Movel <> '' then
    CmdCadFornecedor.Parameters.ParamByName('MOVEL').Value := Movel;

  CmdCadFornecedor.Execute;

  MessageDlg('Fornecedor Cadastrado com Sucesso!!!', mtConfirmation, [mbOK], 0);

end;

end.
